##11/19/22
##Team Purple
##Task Management System Main App Page

##Updates:
##Abel's current version of Main Page
##Gets the user's attributes after running the login page
##calendar almost works?
##radiobutton changed to text box

import calendar
import datetime
from tkinter.ttk import Combobox
from tkinter import *
#from tkinter.ttk import Combobox
import TMSTaskClass as TC ##my current name for class file
from tkinter import messagebox
import csv

def responsiveCalendar(window, user, yC, monthsList, mC, cF):
    m=monthsList.index(mC)+1
    today = datetime.date.today()
    dayNum=0
    x = calendar.monthrange(int(yC), m)
    daysInMonth = x[1]

    
    k=(datetime.date(int(yC), m, 1)).weekday() ##the first day of the chosen month of chosen year
    count = 0

    cF.destroy        
            
    ##Creates a button for each day
    ##when clicked, the current tasks will appear
    ##or a message saying there are no tasks for that day
    
    for i in range(6):
        for j in range(7):
            
            if dayNum < daysInMonth:
                if count<k: ##creates a label for as many days before first day of month
                    label= Label(cF, text="   ", bg='green')
                    label.grid(row=i+1, column=j, sticky='nsew')
                    count+=1
                else:
                    dayNum+=1
                    if today.day == dayNum and today.month == m and str(today.year)==yC:
                        button = Button(cF, text=f"{dayNum}", fg="red")#, command=)
                        button.grid(row=i+1, column=j, sticky='nsew')
                    else:
                        button = Button(cF, text=f"{dayNum}")
                        button.grid(row=i+1, column=j, sticky='nsew')
                    print(dayNum, dayNum <= daysInMonth)
            
               

def mainFunc(user):
    window = Tk()

    window.title('Task Management System')
    window.geometry('550x500')
    window.configure(bg='green')

    BG_COLOR = "Green"
    FG_COLOR = "White"

    ##Welcome Banner
    welcFrame = Frame(master=window)
    welcomeBanner = Label(welcFrame, text=(user[0]+"'s Calendar"),
                          bg='green', fg='white', font = ("Comic Sans MS",20))
    welcomeBanner.pack(side=LEFT)
    welcFrame.pack()


    ##Months and Years as combo boxes + go button
    monthsFrame = Frame(master=window, bg='green')

    monthsList = ["January", "February", "March", "April",
                      "May", "June", "July", "August",
                      "September","October","November","December"]
    
    monthsCombo = Combobox(monthsFrame,width=10,state="readonly")
    monthsCombo['values']= (monthsList)
    monthsCombo.current((datetime.date.today().month)-1)
    monthsCombo.pack(side=LEFT)

    yearsList = ["2022", "2023", "2024", "2025",
                      "2026", "2027", "2028", "2029",
                      "2030","2031","2032","2033"]
    
    yearsCombo = Combobox(monthsFrame,width=6,state="readonly")
    yearsCombo['values']= (yearsList)
    yearsCombo.current((datetime.date.today().year)-2022)
    yearsCombo.pack(side=LEFT, pady=10)

    ##Calendar as buttons
    calendarFrame=Frame(master=window, bg="Green")
    days = ["Mon", "Tue","Wed","Thu","Fri","Sat", "Sun"]
    dateToday = datetime.date.today()
    
    ##creates a label for each weekday starting with monday
    for d in range(len(days)):
        weekdayLabel = Label(calendarFrame, text=days[d], bg='green', fg='white', font=("Comic Sans MS", 12))
        weekdayLabel.grid(column=d, row=0)

    ##changes calendar to reflect selected info
    showCalendarButton = Button(monthsFrame, text="Show Calendar",
                         command=lambda:responsiveCalendar(window, user, yearsCombo.get(), monthsList, monthsCombo.get(), calendarFrame))
    showCalendarButton.pack(side=LEFT)

    monthsFrame.pack()
        
    calendarFrame.pack()

    ##Frame for search function
    searchFrame = Frame(master=window, bg="Green")
    searchLabel=Label(searchFrame, text="Search by:", bg="Green", fg='white', font=("Comic Sans MS", 10))
    searchLabel.pack(side=LEFT)

    searchByCombo = Combobox(searchFrame, width=12, state="readonly")
    searchByCombo['values']= ("No Criteria", "Month", "Day", "Year", "Time",
                      "Title", "Duration", "Description")
    searchByCombo.set("No Criteria Set")

    searchByCombo.current(0)
    searchByCombo.pack(side=LEFT, pady=10)

    goButtonSearch = Button(searchFrame, text="Go")
    goButtonSearch.pack(side=LEFT)

    searchFrame.pack()

    ##Frame for task related options
    ##including task list,
    ##task options (add, edit, remove)

    taskFrame = Frame(master=window, bg= 'green')
    taskLabelFrame = LabelFrame(taskFrame, text='Current Tasks', bg="Green", fg='white')


    ##if tasks exist for that day. else, label says: "There are no tasks scheduled for this day"
    tasksTextBox = Text(taskLabelFrame, width = 20, height=10) ##This button is being weird. I dont know why. (i cant deselect it)
    tasksTextBox.pack()
    taskLabelFrame.pack(side=LEFT,padx=70)


    addButton = Button(taskFrame, text= "Add New Task")##default to selected day
    editButton = Button(taskFrame, text= "Edit Selected Task") ##if not selected, "please select a task"
    removeButton = Button(taskFrame, text= "Remove Selected Task")##same as above and also "Are you sure?"
    addButton.pack(pady=5)
    editButton.pack(pady=5)
    removeButton.pack(pady=5)

    settingsButton=Button(taskFrame, text="User Settings")
    settingsButton.pack(pady=5)

    taskFrame.pack()

    window.mainloop()

mainFunc(['User'])

